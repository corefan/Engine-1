CMAKE_MINIMUM_REQUIRED(VERSION 3.2.3)

SET(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake ${CMAKE_MODULE_PATH})
SET(ENGINE_ROOT ${CMAKE_CURRENT_SOURCE_DIR})
SET(ENGINE_SRC_PATH ${ENGINE_ROOT}/src)
SET(ENGINE_RES_PATH ${ENGINE_ROOT}/res)
SET(ENGINE_3RDPARTY_PATH ${ENGINE_ROOT}/3rdparty)

INCLUDE(projects)

# Setup ISPC
SET(ISPC_TARGETS avx2)
SET(ENABLE_ISPC_SUPPORT YES)
INCLUDE(ispc)

IF(MSVC)
	CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION("10.0.10586.0")
ENDIF()

# Engine project is C++
PROJECT(Engine CXX)


# Output directories.
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/output/lib)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/output/lib)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/output/bin)


# Add third party
SET(JSONCPP_WITH_TESTS OFF CACHE BOOL "jsoncpp test")
SET(JSONCPP_WITH_POST_BUILD_UNITTEST OFF CACHE BOOL "jsoncpp post-build unittests")
SET(JSONCPP_WITH_PKGCONFIG_SUPPORT OFF CACHE BOOL "jsoncpp pkgconfig support")
SET(JSONCPP_WITH_CMAKE_PACKAGE OFF CACHE BOOL "jsoncpp cmake package")

ADD_SUBDIRECTORY("3rdparty/jsoncpp")
SET_TARGET_PROPERTIES(jsoncpp_lib_static PROPERTIES FOLDER "3rdparty/jsoncpp")


SET(SDL_SHARED ON)
SET(SDL_STATIC OFF)

ADD_SUBDIRECTORY("3rdparty/SDL-mirror")

SET_TARGET_PROPERTIES(SDL2main PROPERTIES FOLDER "3rdparty/SDL2")

IF(SDL_SHARED)
	SET_TARGET_PROPERTIES(SDL2 PROPERTIES FOLDER 3rdparty/SDL2)
ENDIF()

IF(SDL_STATIC)
	SET_TARGET_PROPERTIES(SDL2-static PROPERTIES FOLDER "3rdparty/SDL2")
ENDIF()


ADD_SUBDIRECTORY("3rdparty/squish")
SET_TARGET_PROPERTIES(squish PROPERTIES FOLDER "3rdparty/squish")


ADD_SUBDIRECTORY("3rdparty/tinyobjloader")
SET_TARGET_PROPERTIES(tinyobjloader PROPERTIES FOLDER "3rdparty/tinyobjloader")


SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

SET(CMAKE_MODULE_PATH "cmake")

# Version.
SET(ENGINE_MAJOR_VERSION 0)
SET(ENGINE_MINOR_VERSION 0)
SET(ENGINE_MICRO_VERSION 0)
SET(ENGINE_VERSION "${ENGINE_MAJOR_VERSION}.${ENGINE_MINOR_VERSION}.${ENGINE_MICRO_VERSION}")

IF(MSVC)
	# Setup warning level.
    ADD_DEFINITIONS(/W4)		# level 4
    ADD_DEFINITIONS(/WX)		# warnings as errors
    ADD_DEFINITIONS(/wd4100)	# disable unreferenced formal parameter

    # Disable exceptions.
	ADD_DEFINITIONS(/EHsc)
ENDIF()

INCLUDE_DIRECTORIES(
	"${ENGINE_SRC_PATH}"
)

ADD_SUBDIRECTORY("src")
#ADD_SUBDIRECTORY("examples")
